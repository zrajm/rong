#!/bin/sh
# /zrajm, 2022-08-23--2024-01-01

if git rev-parse --verify HEAD >/dev/null 2>&1; then
    PREV=HEAD
else
    # Initial commit: diff against an empty tree object
    PREV=$(git hash-object -t tree /dev/null)
fi

# Redirect output to stderr.
exec 1>&2

echo() { printf "%s\n" "$@"; }

# Get quoted version number from a line.
getver() { grep -Po '(?<=(['\''"]))[0-9.]+(?=\1)'; }

# If '$FILE' has changed, check that its $VERSION is different.
for FILE in rong; do
    if ! git diff --cached --quiet "$FILE"; then
        NEWVER="$(git grep --cached -h '\$VERSION\s*='       "$FILE" | getver)"
        OLDVER="$(git grep          -h '\$VERSION\s*=' "$PREV:$FILE" | getver)" \
            || continue  # file doesn't exist in HEAD (i.e. it's new)
        if [ -z "$OLDVER" -o -z "$NEWVER" -o "$OLDVER" = "$NEWVER" ]; then
            echo "${0##*/}: \$VERSION needs update in file '$FILE'"
            exit 1
        fi
    fi
done

# If there are whitespace errors, print the offending file names and fail.
exec git diff-index --check --cached "$PREV" --

#[eof]
